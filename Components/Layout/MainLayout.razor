@inherits LayoutComponentBase
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@implements IDisposable

<MudThemeProvider Theme="@_theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout Style="background-color: #FDFDF7;">
    <MudAppBar Elevation="1" Fixed="true" Style="background-color: #FDFDF7; color: #333333; box-shadow: 0 1px 3px rgba(0,0,0,0.1);">
        <MudText Typo="Typo.h5" Class="ml-3" Style="color: #333333;">Commex Lifecycle</MudText>
        <MudSpacer />
        <AuthorizeView>
            <Authorized>
                <MudButton Variant="Variant.Text" StartIcon="@Icons.Material.Filled.Logout"
                    OnClick="Logout" Style="color: #333333;">
                    Logout
                </MudButton>
            </Authorized>
            <NotAuthorized>
                <MudButton Variant="Variant.Text" StartIcon="@Icons.Material.Filled.Login"
                    OnClick="Login" Style="color: #333333;">
                    Login
                </MudButton>
            </NotAuthorized>
        </AuthorizeView>
    </MudAppBar>

    <MudMainContent Style="background-color: #FDFDF7; min-height: 100vh;">
        <div style="position: sticky; top: 64px; z-index: 100; background-color: #FDFDF7 !important; border-bottom: 1px solid rgba(0,0,0,0.1);">
            <AuthorizeView>
                <Authorized>
                    <MudTabs Elevation="0" Rounded="false" Centered="false" ApplyEffectsToContainer="false"
                        ActivePanelIndex="activeTab" ActivePanelIndexChanged="OnTabChanged"
                        Class="custom-tabs">
                        @if (context.User.IsInRole("Admin"))
                        {
                            <MudTabPanel Text="Event Simulator" Icon="@Icons.Material.Filled.Science" />
                            <MudTabPanel Text="Admin" Icon="@Icons.Material.Filled.AdminPanelSettings" />
                            <MudTabPanel Text="Debug" Icon="@Icons.Material.Filled.BugReport" />
                        }
                        else
                        {
                            <MudTabPanel Text="Communications" Icon="@Icons.Material.Filled.Email" />
                        }
                    </MudTabs>
                </Authorized>
                <NotAuthorized>
                    <MudTabs Elevation="0" Rounded="false" Centered="false" ApplyEffectsToContainer="false"
                        ActivePanelIndex="0"
                        Class="custom-tabs">
                        <MudTabPanel Text="Please Login" Icon="@Icons.Material.Filled.Lock" />
                    </MudTabs>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="my-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private int activeTab = 0;
    private bool isAdmin = false;
    
    private MudTheme _theme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Background = "#FDFDF7",
            Surface = "#FDFDF7",
            AppbarBackground = "#1976d2",
            AppbarText = "#FFFFFF",
            Primary = "#1976d2",
            Secondary = "#424242",
            Tertiary = "#594AE2",
            Info = "#2196F3",
            Success = "#4CAF50",
            Warning = "#FF9800",
            Error = "#F44336",
            Dark = "#424242",
            TextPrimary = "rgba(0, 0, 0, 0.87)",
            TextSecondary = "rgba(0, 0, 0, 0.54)",
            TextDisabled = "rgba(0, 0, 0, 0.38)",
            DrawerBackground = "#FDFDF7",
            DrawerText = "rgba(0, 0, 0, 0.87)",
            DrawerIcon = "rgba(0, 0, 0, 0.54)",
            ActionDefault = "#757575",
            ActionDisabled = "rgba(0, 0, 0, 0.26)",
            ActionDisabledBackground = "rgba(0, 0, 0, 0.12)",
            Divider = "rgba(0, 0, 0, 0.12)",
            DividerLight = "rgba(0, 0, 0, 0.06)",
            TableLines = "rgba(0, 0, 0, 0.12)",
            TableStriped = "rgba(0, 0, 0, 0.02)",
            TableHover = "rgba(0, 0, 0, 0.04)",
            LinesDefault = "rgba(0, 0, 0, 0.12)",
            LinesInputs = "rgba(0, 0, 0, 0.42)",
            GrayDefault = "#757575",
            GrayLight = "#BDBDBD",
            GrayLighter = "#E0E0E0",
            GrayDark = "#424242",
            GrayDarker = "#212121",
            OverlayDark = "rgba(0, 0, 0, 0.5)",
            OverlayLight = "rgba(255, 255, 255, 0.5)",
            HoverOpacity = 0.04
        },
        Typography = new Typography()
        {
            Default = new Default()
            {
                FontFamily = new[] { "Inter", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontSize = "0.875rem",
                FontWeight = 400,
                LineHeight = 1.43,
                LetterSpacing = "0.01071em"
            }
        }
    };

    protected override async Task OnInitializedAsync()
    {
        // Check if user is admin
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAdmin = authState.User.IsInRole("Admin");
        
        // Set active tab based on current URL
        SetActiveTabFromUrl();
        Navigation.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        SetActiveTabFromUrl();
        StateHasChanged();
    }

    private void SetActiveTabFromUrl()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var path = uri.LocalPath.ToLower();

        if (isAdmin)
        {
            // Admin users have: Event Simulator, Admin, Debug
            if (path.Contains("event-simulator"))
                activeTab = 0;
            else if (path.Contains("admin"))
                activeTab = 1;
            else if (path.Contains("debug"))
                activeTab = 2;
            else
                activeTab = 1; // Default to Admin tab for admin users
        }
        else
        {
            // Non-admin users only have Communications tab
            activeTab = 0; // Always Communications
        }
    }

    private void OnTabChanged(int index)
    {
        activeTab = index;
        string url;
        
        if (isAdmin)
        {
            // Admin users have: Event Simulator, Admin, Debug
            url = index switch
            {
                0 => "/event-simulator",
                1 => "/admin",  // Always go to main admin page, not subpages
                2 => "/debug",
                _ => "/admin"
            };
        }
        else
        {
            // Non-admin users only have Communications
            url = "/communications";
        }
        
        // Force navigation even if already on an admin subpage
        Navigation.NavigateTo(url, forceLoad: false);
    }

    private void Login()
    {
        Navigation.NavigateTo("/Auth/SignIn", true);
    }

    private void Logout()
    {
        Navigation.NavigateTo("/Auth/SignOut", true);
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= OnLocationChanged;
    }
}

<style>
    /* Force cream background on all tab-related elements */
    ::deep .mud-tabs {
        background-color: #FDFDF7 !important;
    }
    
    ::deep .mud-tabs-toolbar {
        background-color: #FDFDF7 !important;
    }
    
    ::deep .mud-tabs-panels {
        background-color: #FDFDF7 !important;
    }
    
    ::deep .mud-tab {
        background-color: transparent !important;
    }
    
    ::deep .mud-paper {
        background-color: #FDFDF7 !important;
    }
    
    ::deep .custom-tabs {
        background-color: #FDFDF7 !important;
    }
    
    ::deep .custom-tabs .mud-tabs-toolbar {
        background-color: #FDFDF7 !important;
    }
    
    ::deep .custom-tabs .mud-paper-root {
        background-color: #FDFDF7 !important;
    }
</style>
